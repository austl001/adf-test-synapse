{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-synapse-test-austl001"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"AzureSynapseAnalytics2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics2'"
		},
		"LS_abls_buyalot_webstore_synapseteststorageadf_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_abls_buyalot_webstore_synapseteststorageadf'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakeaustl001.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_abls_buyalot_webstore_synapseteststorageadf')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to the Buyalot Website Data",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_abls_buyalot_webstore_synapseteststorageadf_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Standard",
						"type": "nvarchar"
					},
					{
						"name": "TradingPartyID",
						"type": "nvarchar"
					},
					{
						"name": "TradingPartyName",
						"type": "nvarchar"
					},
					{
						"name": "TradingPartyType",
						"type": "nvarchar"
					},
					{
						"name": "Period",
						"type": "nvarchar"
					},
					{
						"name": "TotalTasksCompeleted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TasksCompletedOnTime",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "PercentCompletedOnTime",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Year",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MPS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_abls_buyalot_webstore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DS_online_sales",
				"linkedServiceName": {
					"referenceName": "LS_abls_buyalot_webstore_synapseteststorageadf",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "webstore"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "onlinesales.json",
						"container": "sales"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"SalesOrderNumber": {
							"type": "string"
						},
						"SalesOrderLineNumber": {
							"type": "integer"
						},
						"RevisionNumber": {
							"type": "integer"
						},
						"OrderQuantity": {
							"type": "integer"
						},
						"ProductCode": {
							"type": "string"
						},
						"PromotionsCode": {
							"type": "integer"
						},
						"CurrencyCode": {
							"type": "string"
						},
						"UnitPrice": {
							"type": "number"
						},
						"ExtendedAmount": {
							"type": "number"
						},
						"UnitPriceDiscountPct": {
							"type": "number"
						},
						"DiscountAmount": {
							"type": "number"
						},
						"ProductStandardCost": {
							"type": "number"
						},
						"TotalProductCost": {
							"type": "number"
						},
						"SalesAmount": {
							"type": "number"
						},
						"TaxAmt": {
							"type": "number"
						},
						"Freight": {
							"type": "number"
						},
						"CustomerCode": {
							"type": "string"
						},
						"Region": {
							"type": "string"
						},
						"Country": {
							"type": "string"
						},
						"OrderDate": {
							"type": "string"
						},
						"DueDate": {
							"type": "string"
						},
						"ShipDate": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_abls_buyalot_webstore_synapseteststorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_adls_data_engineering_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "webstore/raw/onlinesales",
						"fileSystem": "webdevelopment"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "fsaustl001"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mps_blob_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MPS_data.csv",
						"container": "adf-test-source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Standard",
						"type": "String"
					},
					{
						"name": "Trading.Party.ID",
						"type": "String"
					},
					{
						"name": "Trading Party Name",
						"type": "String"
					},
					{
						"name": "Trading Party Type",
						"type": "String"
					},
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Total number of tasks compeleted within Period",
						"type": "String"
					},
					{
						"name": "Number of tasks completed on time",
						"type": "String"
					},
					{
						"name": "Number of tasks completed later than Time Parameter 1",
						"type": "String"
					},
					{
						"name": "Number of tasks completed later than Time Parameter 2",
						"type": "String"
					},
					{
						"name": "Number of tasks completed later than Time Parameter 3",
						"type": "String"
					},
					{
						"name": "Number of tasks completed later than Time Parameter 4",
						"type": "String"
					},
					{
						"name": "%Tasks Completed On Time",
						"type": "String"
					},
					{
						"name": "Time Parameter 1 Performance Charge Value",
						"type": "String"
					},
					{
						"name": "Additional Time Parameter 2 Performance Charge Value",
						"type": "String"
					},
					{
						"name": "Additional Time Parameter 3 Performance Charge Value",
						"type": "String"
					},
					{
						"name": "Additional Time Parameter 4 Performance Charge Value",
						"type": "String"
					},
					{
						"name": "Total Performance Charge Value",
						"type": "String"
					},
					{
						"name": "Performance Charge Retailer credited value",
						"type": "String"
					},
					{
						"name": "Performance Charge MO credited value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Web Store Online Sales Data into the Data Lake",
				"activities": [
					{
						"name": "Copy Online Web Store Sales Data",
						"description": "Copy Online Sales Data from blob Web Store and ingest to Data Lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_webstore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_webstore')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Web Store Online Sales Data into the Data Lake",
				"activities": [
					{
						"name": "Copy Online Web Store Sales Data",
						"description": "Copy Online Sales Data from blob Web Store and ingest to Data Lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_webstore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email",
						"description": "Send Email Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy Online Web Store Sales Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-01.uksouth.logic.azure.com:443/workflows/1cf057dd7dd448e186baa5a592caaceb/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=bHMmD9pLBxy5uisxB0RaFJX7oEaQz7WURj3Wtn5z0_c",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@json(concat('{\n    \"emailAddress\": \"lukeaustin@gmail.com\",\n    \"subject\": \"ADF Pipeline (PL_data_ingestion_json)\",\n    \"messageBody\": \"Ingestion of Web Store Data into the Data Lake has completed successfully\"\n    }'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_abls_buyalot_webstore')]",
				"[concat(variables('factoryId'), '/datasets/DS_adls_data_engineering_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "mps_blob_test",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "window1"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Standard as string,",
						"          {Trading.Party.ID} as string,",
						"          {Trading Party Name} as string,",
						"          {Trading Party Type} as string,",
						"          Period as string,",
						"          {Total number of tasks compeleted within Period} as integer,",
						"          {Number of tasks completed on time} as short,",
						"          {Number of tasks completed later than Time Parameter 1} as integer,",
						"          {Number of tasks completed later than Time Parameter 2} as integer,",
						"          {Number of tasks completed later than Time Parameter 3} as short,",
						"          {Number of tasks completed later than Time Parameter 4} as short,",
						"          {%Tasks Completed On Time} as double,",
						"          {Time Parameter 1 Performance Charge Value} as integer,",
						"          {Additional Time Parameter 2 Performance Charge Value} as integer,",
						"          {Additional Time Parameter 3 Performance Charge Value} as integer,",
						"          {Additional Time Parameter 4 Performance Charge Value} as integer,",
						"          {Total Performance Charge Value} as integer,",
						"          {Performance Charge Retailer credited value} as integer,",
						"          {Performance Charge MO credited value} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 select(mapColumn(",
						"          Standard,",
						"          TradingPartyID = {Trading.Party.ID},",
						"          TradingPartyName = {Trading Party Name},",
						"          TradingPartyType = {Trading Party Type},",
						"          Period,",
						"          TotalTasksCompeleted = {Total number of tasks compeleted within Period},",
						"          TasksCompletedOnTime = {Number of tasks completed on time},",
						"          PercentCompletedOnTime = {%Tasks Completed On Time}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(TotalTasksCompeleted>3) ~> filter1",
						"filter1 derive(Year = toInteger(left(Period, 4))) ~> derivedColumn1",
						"derivedColumn1 window(over(Standard,",
						"          Period),",
						"     asc(TradingPartyName, true),",
						"     PercentCompletedOnTimeRank = rank()) ~> window1",
						"window1 alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          Standard as string,",
						"          TradingPartyID as string,",
						"          TradingPartyName as string,",
						"          TradingPartyType as string,",
						"          Period as string,",
						"          TotalTasksCompeleted as integer,",
						"          TasksCompletedOnTime as integer,",
						"          PercentCompletedOnTime as integer,",
						"          Year as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['Standard','TradingPartyID','Period'],",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mps_blob_test')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DelimitedText1",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DelimitedText1",
							"dataset": {
								"referenceName": "mps_blob_test",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared DelimitedText1 = let AdfDoc = AzureStorage.BlobContents(\"https://synapseteststorageadf.blob.core.windows.net/adf-test-source/MPS_data.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"DelimitedText1\",\r\n  #\"Changed column type\" = Table.TransformColumnTypes(Source, {{\"%Tasks Completed On Time\", type number}}),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Changed column type\", {\"Time Parameter 1 Performance Charge Value\", \"Additional Time Parameter 2 Performance Charge Value\", \"Additional Time Parameter 3 Performance Charge Value\", \"Additional Time Parameter 4 Performance Charge Value\", \"Total Performance Charge Value\", \"Performance Charge Retailer credited value\", \"Performance Charge MO credited value\", \"Number of tasks completed later than Time Parameter 2\", \"Number of tasks completed later than Time Parameter 3\", \"Number of tasks completed later than Time Parameter 4\", \"Number of tasks completed later than Time Parameter 1\"}),\r\n  #\"Changed column type 1\" = Table.TransformColumnTypes(#\"Removed columns\", {{\"Total number of tasks compeleted within Period\", Int64.Type}, {\"Number of tasks completed on time\", Int64.Type}}) in #\"Changed column type 1\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/mps_blob_test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "fsaustl001/dw-staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "mps_blob_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2ADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]",
				"[concat(variables('factoryId'), '/datasets/mps_blob_test')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2ADLS')]"
			]
		}
	]
}