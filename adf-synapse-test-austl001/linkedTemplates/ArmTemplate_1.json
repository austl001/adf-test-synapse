{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-synapse-test-austl001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "DelimitedText1",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> DelimitedText1",
							"dataset": {
								"referenceName": "mps_blob_test",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared DelimitedText1 = let AdfDoc = AzureStorage.BlobContents(\"https://synapseteststorageadf.blob.core.windows.net/adf-test-source/MPS_data.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let Source = #\"DelimitedText1\",\r\n  #\"Changed column type\" = Table.TransformColumnTypes(Source, {{\"%Tasks Completed On Time\", type number}}),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Changed column type\", {\"Time Parameter 1 Performance Charge Value\", \"Additional Time Parameter 2 Performance Charge Value\", \"Additional Time Parameter 3 Performance Charge Value\", \"Additional Time Parameter 4 Performance Charge Value\", \"Total Performance Charge Value\", \"Performance Charge Retailer credited value\", \"Performance Charge MO credited value\", \"Number of tasks completed later than Time Parameter 2\", \"Number of tasks completed later than Time Parameter 3\", \"Number of tasks completed later than Time Parameter 4\", \"Number of tasks completed later than Time Parameter 1\"}),\r\n  #\"Changed column type 1\" = Table.TransformColumnTypes(#\"Removed columns\", {{\"Total number of tasks compeleted within Period\", Int64.Type}, {\"Number of tasks completed on time\", Int64.Type}}) in #\"Changed column type 1\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Web Store Online Sales Data into the Data Lake",
				"activities": [
					{
						"name": "Copy Online Web Store Sales Data",
						"description": "Copy Online Sales Data from blob Web Store and ingest to Data Lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_webstore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy Online Web Store Sales Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_send_email_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Web Store Online Sales Data into the Data Lake",
				"activities": [
					{
						"name": "Copy Online Web Store Sales Data",
						"description": "Copy Online Sales Data from blob Web Store and ingest to Data Lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_webstore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Log Pipeline Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_send_email_notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log Pipeline Success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Online Web Store Sales Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[InsertPipelineLog]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().parameters.runid",
										"type": "Expression"
									},
									"type": "String"
								},
								"SnapshotDate": {
									"value": {
										"value": "@formatDateTime(pipeline().parameters.snapshotDate, 'yyyy-MM-dd')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"SourceToTargetID": {
									"value": "2",
									"type": "Int32"
								},
								"StartTime": {
									"value": {
										"value": "@convertFromUtc(pipeline().TriggerTime, 'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "Success",
										"type": "Expression"
									},
									"type": "String"
								},
								"UpdateAt": {
									"value": {
										"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_asql_data_engineering_metadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runid": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2021-07-11"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_util_set_status_message')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Sets the status message from a calling pipeline and constructs a subject and a message",
				"activities": [
					{
						"name": "Switch Status",
						"description": "Construct a message and subject depending on the supplied status of either 'success' or 'failed'",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.status",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Success",
									"activities": [
										{
											"name": "Send Email Notifications - Success Message",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_util_send_email_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"systemCode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF Pipeline: ', pipeline().parameters.triggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.triggeredPipeline, ' has completed successfully')",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "Failed",
									"activities": [
										{
											"name": "Send Email Notifications - Failed Message",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_util_send_email_notification",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"systemCode": {
														"value": "@pipeline().parameters.systemCode",
														"type": "Expression"
													},
													"datasetName": {
														"value": "@pipeline().parameters.datasetName",
														"type": "Expression"
													},
													"subject": {
														"value": "@concat('ADF Pipeline: ', pipeline().parameters.triggeredPipeline)",
														"type": "Expression"
													},
													"message": {
														"value": "@concat(pipeline().parameters.triggeredPipeline, ' has FAILED! Please check logs.')",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Send Email Notifications - Default Message",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_util_send_email_notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('ADF Pipeline: ', pipeline().parameters.triggeredPipeline)",
												"type": "Expression"
											},
											"message": {
												"value": "@concat(pipeline().parameters.triggeredPipeline, ' has no valid status: ', pipeline().parameters.status, ' expecting Failed or Success')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"status": {
						"type": "string"
					},
					"triggeredPipeline": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "utility"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureDataLakeStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "fsaustl001/dw-staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "mps_blob_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2ADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_util_log_pipeline_metadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Log Pipeline Run information (Metadata)",
				"activities": [
					{
						"name": "Test Status",
						"description": "Test the Status \"Success\" or \"Failed\"",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.status, 'Success')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Log Pipeline Run Information Metadata - Failed",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.pipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.runID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.snapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourceToTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.pipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_asql_data_engineering_metadata",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Status and Send Message",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Log Pipeline Run Information Metadata - Failed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_util_set_status_message",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"status": {
												"value": "@pipeline().parameters.status",
												"type": "Expression"
											},
											"triggeredPipeline": {
												"value": "@pipeline().parameters.pipelineName",
												"type": "Expression"
											},
											"systemCode": {
												"value": "@pipeline().parameters.systemCode",
												"type": "Expression"
											},
											"datasetName": {
												"value": "@pipeline().parameters.datasetName",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Log Pipeline Run Information Metadata - Success",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[InsertPipelineLog]",
										"storedProcedureParameters": {
											"EndTime": {
												"value": {
													"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().parameters.pipelineID",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().parameters.pipelineName",
													"type": "Expression"
												},
												"type": "String"
											},
											"RunID": {
												"value": {
													"value": "@pipeline().parameters.runID",
													"type": "Expression"
												},
												"type": "String"
											},
											"SnapshotDate": {
												"value": {
													"value": "@pipeline().parameters.snapshotDate",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"SourceToTargetID": {
												"value": {
													"value": "@pipeline().parameters.sourceToTargetID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"StartTime": {
												"value": {
													"value": "@pipeline().parameters.pipelineTriggerTime",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@pipeline().parameters.status",
													"type": "Expression"
												},
												"type": "String"
											},
											"UpdateAt": {
												"value": {
													"value": "@convertFromUtc(utcnow(), 'GMT Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_asql_data_engineering_metadata",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"snapshotDate": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"runID": {
						"type": "string"
					},
					"sourceToTargetID": {
						"type": "string"
					},
					"pipelineTriggerTime": {
						"type": "string"
					},
					"pipelineID": {
						"type": "string"
					},
					"pipelineName": {
						"type": "string"
					},
					"systemCode": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "utility"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_util_set_status_message')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_data_ingestion_json_v5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Ingest Web Store Online Sales Data into the Data Lake",
				"activities": [
					{
						"name": "Copy Online Web Store Sales Data",
						"description": "Copy Online Sales Data from blob Web Store and ingest to Data Lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_abls_buyalot_webstore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_adls_data_engineering_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Success Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy Online Web Store Sales Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Success"
						}
					},
					{
						"name": "Set Failed Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy Online Web Store Sales Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_status",
							"value": "Failed"
						}
					},
					{
						"name": "Log Pipeline Metadata - Success",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Success Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_log_pipeline_metadata",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate, 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runid",
									"type": "Expression"
								},
								"sourceToTargetID": {
									"value": "2",
									"type": "Expression"
								},
								"pipelineTriggerTime": {
									"value": "@convertFromUtc(pipeline().TriggerTime, 'GMT Standard Time')",
									"type": "Expression"
								},
								"pipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Log Pipeline Metadata - Failed",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set Failed Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_util_log_pipeline_metadata",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"snapshotDate": {
									"value": "@formatDateTime(pipeline().parameters.snapshotDate, 'yyyy-MM-dd')",
									"type": "Expression"
								},
								"status": {
									"value": "@variables('v_status')",
									"type": "Expression"
								},
								"runID": {
									"value": "@pipeline().parameters.runid",
									"type": "Expression"
								},
								"sourceToTargetID": {
									"value": "2",
									"type": "Expression"
								},
								"pipelineTriggerTime": {
									"value": "@convertFromUtc(pipeline().TriggerTime, 'GMT Standard Time')",
									"type": "Expression"
								},
								"pipelineID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"systemCode": {
									"value": "@pipeline().parameters.systemCode",
									"type": "Expression"
								},
								"datasetName": {
									"value": "@pipeline().parameters.datasetName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"systemCode": {
						"type": "string",
						"defaultValue": "OWS"
					},
					"datasetName": {
						"type": "string",
						"defaultValue": "Sales"
					},
					"runid": {
						"type": "string",
						"defaultValue": "1"
					},
					"snapshotDate": {
						"type": "string",
						"defaultValue": "2021-07-11"
					}
				},
				"variables": {
					"v_status": {
						"type": "String",
						"defaultValue": "Success"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_util_log_pipeline_metadata')]"
			]
		}
	]
}